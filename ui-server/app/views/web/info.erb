<h3>API Overview</h3>
<p>The API solves the complex problem of detecting the position of faces in images. This is achieved transparent to the user and since it is offered as an API, all the user needs to do is make a HTTP Request.</p>
<p>Details about how everything works can be found <a href="http://github.com/mess110/detection/wiki/Behind-The-Scenes" target="_new">behind the scenes</a>.</p>
<p>This service is <b>free</b> and it will stay <b>free</b>! If you want you can <u>donate</u> to help with hosting/beer fees. (student life is fun)</p>
<center><%= render :partial => "donate" %></center>
<br />
<h3>Examples usage - using <a href="http://curl.haxx.se/">curl</a></h3>
<br />
<p><b>detect request</b> - initiates a new face detection request</p>
<p>Detecting faces in images is achieved when a user makes a new detect request to the API. </p>
<pre><code>
curl -X GET 'http://detection.myvhost.de/api/v2/detect/new?url=[http://url.to.my/image.jpg]'
</code></pre>
<p>Below you will find an example response. One of the more interesting nodes is <%= "<status>" %>. The value is processing, which means the process is not completed but the request is.</p>
<pre><code>
<%= render :partial => "api/v2/detect/new.builder" %>
</code></pre>
<br />
<p><b>detect request (again)</b> - returns the coordinates of faces from the detect request</p>
<p>Since we did not get the results yet, we will make the same request.</p>
<pre><code>
curl -X GET 'http://detection.myvhost.de/api/v2/detect/new?url=[http://url.to.my/image.jpg]'
</code></pre>
<p>Below we notice the response changed. <%= "<status>" %> is now "completed" and the regions array contains the coordinates of faces.</p>
<pre><code>
<% @img.completed = true %>
<%= render :partial => "api/v2/detect/new.builder" %>
</code></pre>
<br />
<p>
<p><b>error response</b> - returned an error from a detect request</p>
<p>In case of an error (eg: URL doesn't point to jpeg) the fallowing response will be shown to the user.</p>
<pre><code>
<%= render :partial => "api/v2/detect/error.builder", :locals => { :params => {:error_code => "invalid_image", :error_description => "You will find a description here. The code node is also useful!"}} %>
</code></pre>

<p>Any questions?</p>
